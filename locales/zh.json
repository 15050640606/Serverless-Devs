{
    "In operation......": "操作中",
    "Welcome to the Serverless Devs Tool.": "欢迎使用Serverless Devs命令行工具",
    "You can use the corresponding function through the following instructions.": "您可根据如下提示来使用功能。",
    "Verbose output": "详细输出",
    "Configure cloud service account.": "配置云服务账号",
    "Initializing a project.": "初始化项目",
    "Initialization successfully": "初始化成功",
    "Search the package.": "搜索包",
    "Publish a(an) Component/Plugin/Application.": "发布一个组件/插件/应用",
    "Settings for the tool.": "设置",
    "Display help for command": "获取帮助信息",
    "Output the version number": "获取版本号",
    "Initialization failed": "初始化失败",
    "Unknown host({{host}}), we support github currently.": "未知域名({{host}}), 当前只支持github.",
    "Initializing......": "正在初始化......",
    "Directory already exists: {{{outputDir}}}": "目录已存在：{{{outputDir}}}",
    "Download Template failed: {{msg}}": "下载模板失败：{{msg}}",
    "Git clone Template failed: {{msg}}": "Git克隆模板失败：{{msg}}",
    "Unknown project format: {{target}}": "未知项目格式：{{target}}",
    "Download Template from app center failed: {{msg}}": "从应用中心下载模板失败：{{msg}}",
    "Unable to get package provider: {{msg}}": "获取包提供者失败：{{msg}}",
    "Failed to get package provider, http code: {{code}}": "获取包提供者失败，http状态码：{{code}}",
    "Failed to get package provider, error message: {{msg}}": "获取包提供者失败，错误信息：{{msg}}",
    "No available provider for {{project}}": "项目{{project}}没有可用的提供者",
    "Please choose a provider": "请选择一个提供者",
    "Failed to get package information, http code: {{code}}": "获取包信息失败，http状态码：{{code}}",
    "Failed to get package information, error: {{msg}}": "获取包信息失败，错误信息：{{msg}}",
    "Download template by url failed, error: {{msg}}": "通过URL下载模板失败，错误信息：{{msg}}",
    "Git repo url not correct.": "Git仓库地址格式不正确",
  
    "Delete package failed": "删除报失败",
    "Deleting......": "删除中...",
    "Failed to delete package, error: {{error}}": "删除包失败， 错误信息：{{error}}",
    "Failed to delete package, http status code: {{code}}": "删除包失败，http状态码：{{code}}",
    "Failed to delete package, code: {{code}}, message: {{msg}}": "删除包失败，错误码：{{code}}，错误信息：{{msg}}",
    "Delete successfully": "删除成功",
    "Initialize a package to be released.": "初始化包模板",
    "Example": "样例",
    "Package type.": "包类型",
    "Package type [Component/Plugin/Application].": "包类型 [Component/Plugin/Application]",
    "Unknown package type: {{type}}": "未知包类型：{{type}}",
  
    "Login failed": "登录失败",
    "Failed to login, error: {{error}}": "登录失败，错误信息为：{{error}}",
    "Failed to login, http code: {{code}}": "登录失败，http状态码为：{{code}}",
    "Failed to login, code: {{code}}, message: {{msg}}": "登录失败，错误码为：{{code}}，错误信息为：{{msg}}",
    "Login information obtained successfully.": "登录成功",
    "Please login in first.": "请使用s platform login先登录",
  
    "Package management.For component/plugin/application developers: including publishing, query, delete and other functions.": "包管理，此功能适用于组件/插件/应用开发者，包含发布、查询、删除等功能。",
    "Login Serverless Tool.": "登录",
    "Publish package.": "发布包",
    "Delete package.": "删除包",
  
    "Search packages": "搜索包",
    "The cloud service provider.": "云提供商",
    "The package type. [component/plugin/application]": "包类型，[component/plugin/application]",
    "Search failed": "搜索失败",
  
    "Search failed, error: {{error}}": "搜索失败，错误信息：{{error}}",
    "Search failed, status code: {{code}}": "搜索失败，http状态码：{{code}}",
    "Search failed, error code: {{code}}, message:{{msg}}": "搜索失败，错误码：{{code}}，错误信息：{{msg}}",
  
    "Analysis failed": "分析操作失败",
    "No 参数 input": "没有参数输入",
    "Too many args input": "参数过多",
    "Unknown input: {{input}}": "未知输入：{{input}}",
    "Setup succeeded": "设置成功",
  
    "You can set language.": "设置语言",
  
    "Deploy project.": "发布项目",
  
    "Add an account": "添加一个账号",
    "Get accounts": "获取帐号信息",
    "Delete an account": "删除指定账号",
    "Update an account": "升级指定账号",
    "You can configure provider accounts, including Alibaba Cloud, Baidu Cloud, Huawei Cloud, Tencent Cloud, etc.": "您可以配置厂商账号信息，例如阿里云、百度云、华为云、腾讯云等。",
  
    "Please input username": "请输入用户名",
    "Please input password": "请输入密码",
    "Init Error": "初始化失败",
    "The cloud service provider. [alibaba/aws/azure/baidu/google/huawei/tencent]": "云服务提供商。 [alibaba/aws/azure/baidu/google/huawei/tencent]",
    "Key pair alias, if the alias is not set, use default instead": "密钥对的别名，如果没有设置，将会用默认值代替。",
    "Configure the AccountID": "配置AccountID",
    "Configure the AccessKeyID": "配置AccessKeyID",
    "Configure the AccessKeySecret": "配置AccessKeySecret",
    "Configure the SecretID": "配置SecretID",
    "Configure the SecretKey": "配置SecretKey",
    "Configure the SecretAccessKey": "配置SecretAccessKey",
    "Configure the KeyVault": "配置KeyVault ",
    "Configure the Secret": "配置Secret ",
    "Configure the PrivateKeyData": "配置PrivateKeyData ",
  
    "Configuration successful": "配置成功",
    "Configuration failed": "配置失败",
    "Please select a provider:": "请选择一个云厂商",
    "Provider + Alias already exists. You can set a different alias or modify it through: {{input}}": "云厂商 + 别名已存在，您可以更换别名或者通过{{input}}进行修改",
    "Please create alias for key pair. If not, please enter to skip": "是否为当前密钥设置别名，可按回车键跳过",
    "Configuration parameter exception": "配置参数异常",
    "The Provider[{{provider}}]: key[{{key}}] is required.": "云厂商{{provider}}中，参数{{key}}是必填参数。",
    "The cloud vendor[{{provider}}] was not found. [alibaba/aws/azure/baidu/google/huawei/tencent]": "默认支持的厂商列表未找到厂商：{{provider}}。[alibaba/aws/azure/baidu/google/huawei/tencent]",
  
    "Download Success......": "下载成功",
  
    "Detailed output information is not available.": "未获得到详细输出信息。",
    "s config add help": "您可以添加一个云厂商的账号信息。\n\n    例如:\n        $ s config add\n        $ s config add -p alibaba\n        $ s config add -p alibaba --AccessKeyID ****** --AccessKeySecret ****** --AccountID ******\n        $ s config add -p huawei --AccessKey ****** --SecretKey ******\n\n     配置不同云厂商所需要的密钥内容:\n        alibaba: AccountID, AccessKeyID, AccessKeySecret\n        aws: AccessKeyID, SecretAccessKey\n        azure: KeyVaultName, TenantID, ClentID, ClientSecret\n        baidu: AccessKeyID, SecretAccessKey\n        huawei: AccessKey, SecretKey\n        google: PrivateKeyData\n        tencent: AccountID, SecretID, SecretKey",
    "s config delete help": "您可以删除一个云厂商的账号信息.\n\n     例如:\n        $ s config delete -p alibaba -a demo\n ",
    "s config get help": "您可以获取一个云厂商的账号信息.\n \n     例如:\n        $ s config get -l\n        $ s config get -p alibaba -a demo\n",
    "s config update help": "您可以更新一个云厂商的账号信息.\n \n     例如:\n        $ s config update -p alibaba -a demo\n        $ s config update -p alibaba -a demo --AccountID ************\n",
    "Key pair alia, if the alias is not set, use default instead": "密钥对别名（如果未设置别名，默认为default)",
  
    "Update AccountID": "更新AccountID ",
    "Update AccessKeyID": "更新AccessKeyID ",
    "Update AccessKeySecret": "更新AccessKeySecret ",
    "Update SecretID": "更新SecretID ",
    "Update SecretKey": "更新SecretKey ",
    "Update SecretAccessKey": "更新SecretAccessKey ",
    "Update KeyVault": "更新KeyVault ",
    "Update Secret": "更新Secret ",
    "Update PrivateKeyData": "更新PrivateKeyData ",
  
    "The key information is not found. You can obtain the key information through: s config get -l.": "删除失败：找不到密钥信息。您可以通过以下方法获取密钥信息：s config get -l",
    "Need to enter provider and aliasName at the same time. You can obtain the key information through: s config delete -h.": "删除失败：需要同时输入provider和aliasName。您可以通过以下方式获取密钥信息：s config delete -h",
    "The configuration list is empty. You can add configuration through: s config add": "配置列表为空。您可以通过以下方式添加配置：s config add",
  
    "Query failed : Please input right format. You can obtain the key information through: s config get -h": "查询失败：请输入正确的格式。您可以通过以下方式获取关键信息：s config get -h",
    "Query failed : The key information is not found. You can obtain the key information through: s config get -l": "查询失败：找不到关键信息。 您可以通过以下方法获取关键信息：s config get -l",
    "Show user configuration list": "显示用户配置列表",
  
    "The provider or alias information is not found. You can obtain the key information through: s config get -l": "找不到云厂商或别名信息。 您可以通过以下方法获取关键信息：s config get -l",
  
    "  You can configure the specified key in yaml. For example:": "您可以在Yaml中配置指定密钥信息，例如：",
    "    Access: Fill in the specified key here": "    Access: 在此处填写已经配置过的密钥",
  
    "Alibaba Cloud": "阿里云",
    "Huawei Cloud": "华为云",
    "Baidu Cloud": "百度云",
    "Tencent Cloud": "腾讯云",
    "AWS": "AWS",
    "Azure": "Azure",
    "Google Cloud": "谷歌云",
    "Alibaba Cloud (alibaba)": "阿里云 (alibaba)",
    "Huawei Cloud (huawei)": "华为云 (huawei)",
    "Baidu Cloud (baidu)": "百度云 (baidu)",
    "Tencent Cloud (tencent)": "腾讯云 (tencent)",
    "AWS (aws)": "AWS (aws)",
    "Azure (azure)": "Azure (azure)",
    "Google Cloud (google)": "谷歌云 (google)",
  
    "Update succeeded.": "更新成功",
    "Deletion succeeded": "删除成功",
    "Update failed": "更新失败",
    "Deletion failed": "删除失败",
    "Get failed": "获取失败",
    "Config failed": "配置失败",
  
    "You can make some default settings for the tool here.": "您可以在此处对工具做一些个性化设置。",
    "Upload your usage habits to help us improve our products": "与我们分享您的行为习惯，有助于我们改善产品。",
    "Output language switch": "语言选择",
    "Control color output": "颜色输出选择",
  
    "Start ......": "开始 ......",
    "It is detected that your project has the following project/projects < {{projects}} > to be execute": "检测到您有以下项目 < {{projects}} > 要执行" ,
    "End of method: {{method}}": "方法结束: {{method}}",
    "End the pre-hook": "完成前置条件的执行",
    "Start the pre-hook": "开始执行前置条件",
    "End the after-hook": "完成后置条件的执行",
    "Start the after-hook": "开始执行后置条件",
    "Execute:": "执行结果：",
    "Execute stdout:": "异常输出：",
  
    "Name": "名称",
    "Provider & Type": "云厂商&类型",
    "Description": "描述",
    "Could not get packages.": "无法获取到包信息。",
    "Could not get package.": "无法获取到包信息。",
    "  Init Information:": "  初始化信息：",
    "    Package: {{package}}    Provider: {{provider}}": "    包名：{{package}}    云厂商：{{provider}}",
  
    "The cloud service provider": "用服务提供商",
    "Initialize a new project based on a template.": "基于模板等初始化一个项目。",
    "Example:": "例如：",
    "Here you can set whether the output has color.": "您可以在这里设置输出信息是否带有颜色",
    "Package management.For component/plugin/application developers:  including publishing, query, delete and other functions.": "包管理，组件/插件/应用开发者开在这里进行发布、更新、删除等操作",
    "Username of Serverless Devs Tool Platform": "Serverless Devs Tool 平台账号",
    "Password of Serverless Devs Tool Platform": "Serverless Devs Tool 平台密码",
    "Publish successfully": "发布成功",
    "[Required] Package name and version, like: test@0.0.1": "[必填] 包名称和版本，例如：test@0.0.1",
    "[Required] Package version": "[必填] 包版本",
    "[Required] Package type [Component/Plugin/Application]": "[必填] 包类型，包括Component、Plugin、Application",
    "[Required] Provider": "[必填] 云厂商",
    "Could not get component name and version, please check you component content.": "无法获得到组件名称和版本，请检查您填写的组件。",
    "Please select an access:": "请选择一个账号：",
    "Start executing project {{projectName}}": "开始执行项目{{projectName}}",
    "Project {{projectName}} successfully to execute \n\t": "项目{{projectName}}已成功执行 \n\t",
    "Project {{projectName}} failed to execute": "项目{{projectName}}执行失败",
    "Project {{projectName}} doesn't have the method: {{method}}": "项目{{projectName}}中未找到指定方法：{{method}}",
    "No credential found please set": "未找到账号信息，请设置",
    "No component {{name}}-{{provider}}@{{version}} is found, it will be downloaded soon, this may take a few minutes......": "本地未找到{{name}}-{{provider}}@{{version}}，系统将会下载，这可能需要一些时间......",
    "Please Check the provider and component": "请检查云厂商和组件",
    "Please try again later": "请稍后重试",
    "Where to output the initialized app into (default: ./ )": "生成的应用/模板路径",
    "Skip the Extends section": "跳过/忽略Extends",
    "Downloading ...": "下载中 ...",
    "Executing ...": "执行中 ...",
    "If your want output colorful": "如果您想输出彩色的",
    "If your want output with default color": "如果您想使用默认颜色输出",
    "Unable to format the output, the system will display the original output of the component:": "无法格式化输出，系统即将把组件的原始输出展示出来：",
    "Calling @serverless-devs/s tools in Extends requires configuring Access in Yaml.": "在Extends中使用@serverless-devs/s工具需要配置Access在您的Yaml中。",
    "Start GUI service.": "启动GUI服务。",
    "Start GUI service": "启动GUI服务",
    "Check that you don’t have a gui client, download it now, it will take you about 1 minute.": "系统未监测到GUI客户端，现在开始下载，请您稍等1分钟左右。",
    ":Loading ...": ":加载中",
    ":Unziping ...": ":解压中",
    "Download successfully, now start to unzip.": "下载成功，现在开始解压。",
    "Unzip success begin to start.": "解压成功，开始启动。",
    "The system has detected a new version of the GUI. You can use `s gui --update` to upgrade.": "系统检测GUI服务有新版本，您可以使用`s gui --update`升级。",
    "Upgrade GUI": "升级GUI",
    "GUI updating ......": "GUI 升级中",
    "    You can upgrade through : npm install @serverless-devs/s -g": "    您可以通过：npm install @serverless-devs/s -g 进行升级",
    "    Update information:": "    升级信息：",
    "Init project through GUI service": "通过GUI进行项目初始化",
    "You could get a project from Serverless Devs App Store. Like:": "您可以通过Serverless Devs应用中心获取一个项目。例如：",
    "Package type [Component/Plugin/Application]": "包类型 [Component/Plugin/Application]",
    "Skip the extends section": "跳过Extends部分",
    "Installing dependencies ...": "正在安装依赖 ...",
    "The operation was not fully successful": "操作未完全成功",
    "> Execute Error": "> 执行出错",
    "The specified method and default method were not found in the component": "组件中未找到指定方法和默认方法",
    "[Custom] The {{component}}@{{provider}} project.": "[自定义] {{component}}@{{provicer}} 项目.",
    "to pack folder": "待打包的文件夹",
    "Set up a custom registry": "设置自定义注册源",
    "AccountID of key information": "配置密钥 AccountID",
    "AccessKeyID of key information": "配置密钥 AccessKeyID",
    "AccessKeySecret of key information": "配置密钥 AccessKeySecret",
    "SecretAccessKey of key information": "配置密钥 SecretAccessKey",
    "AccessKey of key information": "配置密钥 AccessKey",
    "SecretKey of key information": "配置密钥 SecretKey",
    "SecretID of key information": "配置密钥 SecretID",
    "PrivateKeyData of key information": "配置密钥 PrivateKeyData",
    "Keys of key information, like: -kl key1,key2,key3": "配置密钥 Keys，例如：-kl key1,key2,key3",
    "Values of key information, like: -kl info1,info2,info3": "配置密钥 Values，例如：-kl info1,info2,info3",
    "Please make sure -kl/--keyList is as long as -il/--infoList": "请保证 -kl/--keyList的长度和-il/--infoList一致"
  }
  